#!/usr/bin/env sh

# TODO:Implement this idea
# - first space is always main
# - space created, destroyed, etc -> run script
# - space 2 -> terminal
# - space 3 -> idea
# paddings per displays

yabai -m space 1 --label main1
yabai -m space 2 --label idea
yabai -m space 3 --label tasks
yabai -m space 6 --label terminal

# default layout (can be bsp, stack or float)
# yabai -m config layout float
yabai -m config layout bsp

yabai -m space tasks --layout bsp
yabai -m space idea --layout float

yabai -m config top_padding     0
yabai -m config bottom_padding  0
yabai -m config left_padding    0
yabai -m config right_padding   0
yabai -m config window_gap      0

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

d1w=$(yabai -m query --displays --display 1 | jq ".frame.w")
d1w=${d1w%.*}
d1h=$(yabai -m query --displays --display 1 | jq ".frame.h")
d1h=${d1h%.*}

display_large_w="2500"
display_small_w="1450"
if [[ d1w -gt display_large_w ]]; then
  echo "yabai: Display 1: large: ${d1w}x${d1h}"
  yabai -m config top_padding    250
  yabai -m config bottom_padding  20
  yabai -m config left_padding   250
  yabai -m config right_padding  250
  yabai -m config window_gap      20
elif [[ d1w -lt display_small_w ]]; then
  echo "yabai: Display 1: small: ${d1w}x${d1h}"
  yabai -m config layout stack
else
  echo "yabai: Display 1: normal: ${d1w}x${d1h}"
fi

yabai -m config mouse_follows_focus         off
yabai -m config focus_follows_mouse         off

#yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               float

#yabai -m config window_border               on
#yabai -m config window_border_width         2
#yabai -m config active_window_border_color  "0xE0808080"
#yabai -m config normal_window_border_color  "0x00010101"
#yabai -m config insert_feedback_color       "0xE02d74da"

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       0.90
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# when window is dropped in center of another window, swap them (on edges it will split it)
#yabai -m mouse_drop_action swap

#yabai -m rule --add app="^Raycast$" title="^Raycast Settings$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^AppCleaner$" manage=off
yabai -m rule --add app="^Bitwarden$" manage=off
yabai -m rule --add title="^Bitwarden$" manage=off
yabai -m rule --add title="^Software Update$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^Finder$" manage=off
yabai -m rule --add app="^Telegram$" manage=off
#yabai -m rule --add app="^Alacritty$" space=1 native-fullscreen=on

idea_windows=(
  "Settings"
  "Project Structure"
  ".*Rename.*"
  "Delete"
  "Evaluate"
  "Plugin Updates"
  "Run/Debug Configurations"
  "Environment Variables"
  "Select Methods to Implement"
  "Data Sources and Drivers"
  "Error"
  ".*Commit.*"
  "Create"
  "Modify"
  "Confirm Drop"
  "Merge Revisions.*"
  "Introduce Variable"
  "Conflicts Detected.*"
  ".*Choose.*"
  ".*Git.*"
  ".*Configure.*"
  ".*Move.*"
  ".*Copy.*"
  "Push Commits.*"
  ".*Data Sources.*"
  "Create New Profile"
)

for title in "${idea_windows[@]}"
do
  yabai -m rule --add app="^.*IDEA.*$" title="^$title$" manage=off
done

yabai -m rule --add app="^.*TickTick.*$" --space tasks
yabai -m rule --add app="^.*Logseq.*$" --space tasks
yabai -m rule --add app="^.*IDEA.*$" --space idea
yabai -m rule --add app="^.*Alacritty.*$" --space terminal
yabai -m rule --add app="^.*Kitty.*$" --space terminal

# https://github.com/koekeishiya/yabai/issues/1317
# yabai -m signal --add event=window_created action='
#   yabai -m query --windows --window $yabai_window_id | jq -er ".\"can-resize\" or .\"is-floating\"" || \
#   yabai -m window $yabai_window_id --toggle float --layer above --grid 4:5:2:1:2:2 || \
#   terminal-notifier -title "yabai" -subtitle "$yabai_window_id" -message "No resizable window"
# '

echo "yabai: Loaded $(dirname "$0")/$(basename "$0")"

